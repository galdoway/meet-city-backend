generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id                  Int       @id @default(autoincrement())
  uuid                String    @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id             Int       @unique
  firstname           String?   @db.VarChar(25)
  lastname            String?   @db.VarChar(25)
  profile_picture_url String?   @db.VarChar(275)
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  updated_at          DateTime? @db.Timestamptz(6)
  User                User      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id         Int       @id @default(autoincrement())
  uuid       String    @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email      String    @unique @db.VarChar(75)
  password   String    @db.VarChar(255)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @db.Timestamptz(6)
  Meeting    Meeting[]
  Profile    Profile?
}

model Meeting {
  id           Int       @id @default(autoincrement())
  uuid         String    @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title        String    @default("New Meeting") @db.VarChar(255)
  description  String?
  status       String    @db.VarChar(55)
  scheduled_at DateTime? @db.Timestamptz(6)
  invite_url   String    @db.VarChar(275)
  created_by   Int?
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at   DateTime? @db.Timestamptz(6)
  deleted_at   DateTime? @db.Timestamptz(6)
  User         User?     @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
